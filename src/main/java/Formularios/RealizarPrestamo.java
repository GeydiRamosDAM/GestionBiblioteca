
package Formularios;

import Clases.ConnectionDB;
import java.awt.BorderLayout;
import java.awt.Dimension;
//import java.awt.GraphicsEnvironment;
import java.awt.Toolkit;
import java.sql.Connection;
import javax.swing.JFrame;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import java.sql.SQLException;
import javax.management.modelmbean.ModelMBean;
import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.RowFilter;

public class RealizarPrestamo extends javax.swing.JFrame {

    /**
     * Creates new form VentanaInicial
     */
    public ConnectionDB myConnDB;
    String nombreDeLibro; 
    String Autor;
    String Edicion;
    String Anno; 
    String nombreBiblioteca;
    String direccionBiblioteca;
    String idLibro;
    int idLibroSeleccionado;
    
   // static JTable table;
    JFrame frame1;
    int idUsuario;
    int rol;
    String usuarioCorreo;
    
    //String[] columnNames = {"Nombre del Libro", "Autor", "Edición", "Año"};

    public RealizarPrestamo(int p_idUsuario, int p_Rol, String p_UsuarioCorreo) throws SQLException {
            
        initComponents(); 
        
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        this.setSize(screenSize.width, screenSize.height);
        this.setTitle("GESTION DE LIBROS - REALIZAR PRESTAMO");
        
        myConnDB = new ConnectionDB ("usuario_libreria","Libreria2024","gestion_libros"); //usuario, contraseña, BD
        
        idUsuario = p_idUsuario;
        rol = p_Rol;
        usuarioCorreo = p_UsuarioCorreo;
        
        //mostrar las filas
        showTableData();
        
        //bloquear la edición de las filas
        jTable2.setDefaultEditor(Object.class, null);
        
        
        //esconder la columna
        jTable2.getColumnModel().getColumn(0).setWidth(0);
        jTable2.getColumnModel().getColumn(0).setMinWidth(0);
        jTable2.getColumnModel().getColumn(0).setMaxWidth(0);
        
               
    }

    
    public void showTableData() throws SQLException
    {
        try {
                frame1 = new JFrame("Database Search Result");
                frame1.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                frame1.setLayout(new BorderLayout());

                jTable2.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
                jTable2.setFillsViewportHeight(true);

                 myConnDB.connect();
                 ResultSet listaLibros = myConnDB.query("SELECT libros.idLibros, libros.Nombre, libros.Autor, libros.Edicion, libros.Anno, biblioteca.NombreBibliot, biblioteca.Direccion FROM libros LEFT JOIN biblioteca ON biblioteca.idBiblioteca=libros.UbicBiblioteca WHERE libros.Stock >0");
                 while(listaLibros.next())
                    {
                        idLibro = String.valueOf(listaLibros.getInt("libros.idLibros"));
                        nombreDeLibro = listaLibros.getString("libros.Nombre");
                        Autor =  listaLibros.getString("libros.Autor");
                        Edicion = String.valueOf(listaLibros.getInt("libros.Edicion"));
                        Anno = String.valueOf(listaLibros.getInt("libros.Anno"));
                        nombreBiblioteca = listaLibros.getString("biblioteca.NombreBibliot");
                        direccionBiblioteca = listaLibros.getString("biblioteca.Direccion");

                        String tbData [] = {idLibro, nombreDeLibro, Autor, Edicion, Anno, nombreBiblioteca, direccionBiblioteca};

                        DefaultTableModel tblModel = (DefaultTableModel)jTable2.getModel();

                        tblModel.addRow(tbData);
                        //tblModel.isCellEditable(false);
                    }

                 myConnDB.disconnect();
            } catch (Exception e) {
            }

     
    }
    
   
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        bt_salir = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        bt_salir1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 51));
        jLabel1.setText("LISTA DE LIBROS DISPONIBLES POR BIBLIOTECA");

        bt_salir.setText("Salir");
        bt_salir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bt_salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_salirActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idLibro", "Nombre del Libro", "Autor", "Edición", "Año", "Biblioteca", "Ubicación de Biblioteca"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jTextField1.setToolTipText("Filtro");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Buscar:");

        bt_salir1.setText("Realizar Préstamo");
        bt_salir1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bt_salir1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_salir1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bt_salir, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bt_salir1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 584, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(724, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 624, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(102, 102, 102)
                        .addComponent(bt_salir1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(bt_salir, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(139, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bt_salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_salirActionPerformed
        // TODO add your handling code here:
        
         //setDefaultCloseOperation(EXIT_ON_CLOSE);
         
         //System.exit(0);
         this.setVisible(false);
         FormularioAdministrador fa = new FormularioAdministrador(idUsuario,rol,usuarioCorreo);
         fa.setVisible(true);
    }//GEN-LAST:event_bt_salirActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
        TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(((DefaultTableModel) jTable2.getModel())); 
        sorter.setRowFilter(RowFilter.regexFilter(jTextField1.getText()));
        jTable2.setRowSorter(sorter);
        
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void bt_salir1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_salir1ActionPerformed
        // TODO add your handling code here:
        
         int filaSeleccionada = jTable2.getSelectedRow();
        if(filaSeleccionada != -1){
            idLibroSeleccionado = Integer.valueOf(jTable2.getModel().getValueAt(filaSeleccionada, 0).toString()); //columna 0, idLibroSeleccionado
            
            RegistroNuevoPrestamo nuevoPrestamo = new RegistroNuevoPrestamo(idLibroSeleccionado);
            nuevoPrestamo.setVisible(true);
            
        }
    }//GEN-LAST:event_bt_salir1ActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_salir;
    private javax.swing.JButton bt_salir1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
